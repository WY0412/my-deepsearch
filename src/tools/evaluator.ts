import { GenerateObjectResult } from 'ai';
import { AnswerAction, EvaluationResponse, EvaluationType, KnowledgeItem, PromptPair, TrackerContext } from '../types';
import { ObjectGeneratorSafe } from "../utils/safe-generator";
import { Schemas } from "../utils/schemas";
import { getKnowledgeStr } from "../utils/text-tools";
import { logInfo, logError, logDebug, logWarning } from '../logging';

const TOOL_NAME = 'evaluator';


function getRejectAllAnswersPrompt(question: string, answer: AnswerAction, allKnowledge: KnowledgeItem[]): PromptPair {
  const KnowledgeStr = getKnowledgeStr(allKnowledge);

  return {
    system: `
您是一位公正客观的回答评估专家。您的工作是评估回答是否满足问题的要求。
用户向您展示了一对问题-回答，您的任务是确定回答是否可接受。
请全面考虑回答的优点和不足。
首先，指出回答做得好的方面。
然后，指出任何需要改进的小问题或领域。
最后，综合给出公正的评估和改进计划，以"为了通过评估，您必须..."开头。

您应该通过符合以下条件的回答：
1. 直接回应问题
2. 主要观点事实准确
3. 对问题范围内容覆盖合理全面
4. 清晰易懂

只有在存在以下重大问题时才拒绝回答：
1. 完全偏离主题
2. 包含重大事实错误
3. 缺少回答问题所需的关键信息
4. 不可理解或严重缺乏组织结构

Markdown或JSON格式问题永远不应该成为您关注的重点，也不应该在您的反馈或拒绝理由中提及。

您始终应该支持使用最易读的自然语言格式的回答。
如果多个部分具有非常相似的结构，建议使用表格等其他呈现格式使内容更易读。
不要鼓励使用深度嵌套结构，将其展平为自然语言部分/段落甚至表格。表格应使用标准Markdown表格语法，例如：

| 列1 | 列2 | 列3 |
| --- | --- | --- |
| 数据1 | 数据2 | 数据3 |

以下知识项目供您参考。请注意，其中一些可能与用户提供的问题/回答没有直接关系，但可能提供一些微妙的提示和见解：
${KnowledgeStr.join('\n\n')}
`,
    user: `
尊敬的评审专家，我需要您对以下问题-回答对进行评估：

<问题>
${question}
</问题>

以下是我对该问题的回答：
<回答>
${answer.answer}
</回答>
 
请根据您的知识和合理标准对其进行评估。请告诉我它是否可接受，或者如何改进它。
`
  }
}


function getDefinitivePrompt(question: string, answer: string): PromptPair {
  return {
    system: `您是回答确定性的评估专家。请分析给定的回答是否提供了明确的响应。

<规则>
首先，如果回答不是对问题的直接回应，必须返回false。

确定性意味着提供清晰、自信的回应。以下方法被视为确定性的：
  1. 直接、清晰的陈述，解决了问题
  2. 全面的回答，涵盖多个视角或问题的各个方面
  3. 承认复杂性的同时仍提供实质性信息的回答
  4. 平衡的解释，呈现利弊或不同观点

以下类型的回应不具有确定性，必须返回false：
  1. 表达个人不确定性："我不知道"、"不确定"、"可能是"、"或许"
  2. 缺乏信息的陈述："不存在"、"缺乏信息"、"找不到"
  3. 无能力陈述："我无法提供"、"我无法"、"我们不能"
  4. 重定向的否定陈述："然而，您可以..."、"相反，尝试..."
  5. 不回答问题而建议替代方案的回应

注意：确定性回答可以承认合理的复杂性或呈现多种观点，只要它以自信的方式这样做，并直接针对问题提供实质性信息。
</规则>

<示例>
问题："运行Python 3.9的系统要求是什么？"
回答："我不太确定，但我认为你需要一台有一些RAM的电脑。"
评估：{
  "think": "回答包含不确定性标记，如'不太确定'和'我认为'，使其不具确定性。"
  "pass": false,
}

问题："运行Python 3.9的系统要求是什么？"
回答："Python 3.9需要Windows 7或更高版本，macOS 10.11或更高版本，或Linux。"
评估：{
  "think": "回答做出清晰、明确的陈述，没有不确定性标记或模糊性。"
  "pass": true,
}

问题："2032年谁将成为美国总统？"
回答："我无法预测未来，这取决于选举结果。"
评估：{
  "think": "回答包含无法预测未来的陈述，使其不具确定性。"
  "pass": false,
}

问题："X公司的销售总监是谁？"
回答："我无法提供销售总监的姓名，但您可以通过sales@companyx.com联系他们的销售团队"
评估：{
  "think": "回答以'我无法提供'开头，并重定向到替代联系方式，而不是回答原始问题。"
  "pass": false,
}

问题："jina ai创始人的twitter账号是什么？"
回答："提供的文本不包含Jina AI创始人的Twitter账号。"
评估：{
  "think": "回答表明缺乏信息，而不是提供明确的回应。"
  "pass": false,
}

问题："量子コンピュータの計算能力を具体的に測定する方法は何ですか？"
回答："量子コンピュータの計算能力は量子ビット（キュービット）の数、ゲート忠実度、コヒーレンス時間で測定されます。"
评估：{
  "think": "回答提供了具体、明确的量子计算能力测量指标，没有不确定性标记或限定。"
  "pass": true,
}

问题："如何证明哥德巴赫猜想是正确的？"
回答："目前尚无完整证明，但2013年张益唐证明了存在无穷多对相差不超过7000万的素数，后来这个界被缩小到246。"
评估：{
  "think": "回答以陈述没有完整证明开始，这是一个非确定性回应，然后转向讨论相关但不同的关于素数间有界差距的定理。"
  "pass": false,
}

问题："Wie kann man mathematisch beweisen, dass P ≠ NP ist?"
回答："Ein Beweis für P ≠ NP erfordert, dass man zeigt, dass mindestens ein NP-vollständiges Problem nicht in polynomieller Zeit lösbar ist. Dies könnte durch Diagonalisierung, Schaltkreiskomplexität oder relativierende Barrieren erreicht werden."
评估：{
  "think": "回答提供了证明P≠NP的具体数学方法，没有不确定性标记，呈现了可以使用的明确方法。"
  "pass": true,
}

问题："全民医疗保健是一项好政策吗？"
回答："全民医疗保健既有优点也有缺点。支持者认为它为所有公民提供保障，降低行政成本，并导致更好的公共健康结果。批评者则认为它可能增加等待时间，提高税收，并可能减少医疗治疗的创新。大多数发达国家已经实施了某种形式的全民医疗保健，结构和覆盖程度各不相同。"
评估：{
  "think": "回答自信地呈现了辩论的双方观点，每个视角都有具体的要点。它直接回应问题，提供实质性信息，没有个人不确定性表达。"
  "pass": true,
}

问题："公司应该使用AI进行招聘决策吗？"
回答："这个问题的两方面都有令人信服的论据。公司在招聘中使用AI可以受益于初步筛选中的偏见减少、大型申请者池的更快处理，以及可能基于技能评估的更好匹配。然而，这些系统也可能延续训练数据中的历史偏见，可能忽略微妙的人类品质，并引发隐私问题。其有效性取决于谨慎实施、人类监督和对这些系统的定期审核。"
评估：{
  "think": "回答提供了关于招聘中AI使用的平衡、详细的两方面观点。它承认复杂性的同时以自信的方式提供实质性信息。"
  "pass": true,
}

问题："核能安全吗？"
回答："我不是能源政策专家，所以我不能真正说核能是否安全。曾发生过一些事故，但也有许多成功的电厂。"
评估：{
  "think": "回答包含明确的个人不确定性表达（'我不是专家'，'我不能真正说'），并且只提供模糊信息，没有实质性内容。"
  "pass": false,
}
</示例>`,
    user: `
问题: ${question}
回答: ${answer}`
  };
}

function getFreshnessPrompt(question: string, answer: AnswerAction, currentTime: string): PromptPair {
  return {
    system: `您是一位评估专家，负责分析回答内容是否可能已过时，基于提到的日期（或隐含的日期时间）和当前系统时间：${currentTime}

<规则>
问答新鲜度检查指南

| 问答类型 | 最大年龄(天) | 备注 |
|---------|------------|------|
| 金融数据(实时) | 0.1 | 股票价格、汇率、加密货币(优先实时) |
| 突发新闻 | 1 | 重大事件的即时报道 |
| 新闻/时事 | 1 | 时效性新闻、政治或全球事件 |
| 天气预报 | 1 | 准确性在24小时后显著下降 |
| 体育比分/赛事 | 1 | 进行中的比赛需要实时更新 |
| 安全公告 | 1 | 关键安全更新和补丁 |
| 社交媒体趋势 | 1 | 病毒内容、标签、迷因 |
| 网络安全威胁 | 7 | 快速演变的漏洞/补丁 |
| 科技新闻 | 7 | 技术行业更新和公告 |
| 政治发展 | 7 | 立法变化、政治声明 |
| 政治选举 | 7 | 民调结果、候选人更新 |
| 销售/促销 | 7 | 限时优惠和营销活动 |
| 旅行限制 | 7 | 签证规则、疫情相关政策 |
| 娱乐新闻 | 14 | 名人更新、行业公告 |
| 产品发布 | 14 | 新产品公告和发布 |
| 市场分析 | 14 | 市场趋势和竞争格局 |
| 竞争情报 | 21 | 竞争对手活动和市场地位分析 |
| 产品召回 | 30 | 制造商安全警报或召回 |
| 行业报告 | 30 | 特定行业分析和预测 |
| 软件版本信息 | 30 | 更新、补丁和兼容性信息 |
| 法律/监管更新 | 30 | 法律、合规规则(取决于司法管辖区) |
| 经济预测 | 30 | 宏观经济预测和分析 |
| 消费者趋势 | 45 | 消费者偏好和行为变化 |
| 科学发现 | 60 | 新研究发现和突破(包括所有科学研究) |
| 医疗指南 | 60 | 医疗建议和最佳实践(包括医疗指南) |
| 环境报告 | 60 | 气候和环境状况更新 |
| 最佳实践 | 90 | 行业标准和推荐程序 |
| API文档 | 90 | 技术规范和实施指南 |
| 教程内容 | 180 | 操作指南和教学材料(包括教育内容) |
| 技术产品信息 | 180 | 产品规格、发布日期或定价 |
| 统计数据 | 180 | 人口统计和统计信息 |
| 参考资料 | 180 | 一般参考信息和资源 |
| 历史内容 | 365 | 过去一年的事件和信息 |
| 文化趋势 | 730 | 语言、时尚或社会规范的变化 |
| 娱乐发布 | 730 | 电影/电视节目时间表、媒体目录 |
| 事实知识 | ∞ | 静态事实(如历史事件、地理、物理常数) |

### 实施说明：
1. **上下文调整**：在特定领域的危机或快速发展期间，新鲜度要求可能会改变。
2. **分层方法**：考虑实施紧急级别(关键、重要、标准)与年龄阈值一起。
3. **用户偏好**：允许为特定查询类型或用户需求自定义阈值。
4. **来源可靠性**：将新鲜度指标与来源可信度评分配对，以获得更好的质量评估。
5. **领域特异性**：某些专业领域(疫情期间的医学研究、市场波动期间的金融数据)可能需要动态调整阈值。
6. **地理相关性**：区域考虑可能会改变当地法规或事件的新鲜度要求。
</规则>`,

    user: `
问题: ${question}
回答: 
${JSON.stringify(answer)}

请查看我的回答和参考资料并思考。
`
  }
}

function getCompletenessPrompt(question: string, answer: string): PromptPair {
  return {
    system: `您是一位评估专家，负责判断回答是否涵盖了多方面问题中明确提及的所有方面。

<规则>
对于明确包含多个方面的问题：

1. 明确方面识别：
   - 只识别问题中明确提及的方面
   - 寻找特别提到的具体主题、维度或类别
   - 方面可能通过逗号、"和"、"或"、项目符号分隔，或在"如X、Y和Z"等短语中提及
   - 不要包括可能相关但未明确提及的隐含方面

2. 覆盖度评估：
   - 回答应涵盖每个明确提及的方面
   - 认识到回答可能使用不同术语、同义词或对同一方面的改述
   - 寻找概念覆盖而非精确词语匹配
   - 计算覆盖率（已涵盖方面数 / 明确提及的方面总数）

3. 通过/失败判定：
   - 通过：涵盖所有明确提及的方面，即使使用不同术语或不同语言风格
   - 失败：遗漏一个或多个明确提及的方面
</规则>

<示例>
问题："气候变化如何影响地中海地区的农业实践、水资源和生物多样性？"
回答："气候变化通过气温升高和降雨模式改变影响地中海农业。农民现在实施滴灌技术以节约用水并调整种植时间表。淡水可用性已显著下降，地下水枯竭，季节性溪流每年干涸时间提前。"
预期方面："农业实践、水资源、生物多样性"
提供方面："农业适应、灌溉方法、降水变化、淡水可用性、地下水枯竭"
思考："问题明确提到三个方面：农业实践、水资源和生物多样性。回答涵盖了农业实践（讨论了农业适应、灌溉方法、种植时间表）和水资源（涵盖了淡水可用性、地下水枯竭、季节性溪流）。然而，它完全忽略了生物多样性影响的讨论，而这是问题中明确要求的。"
通过：否

问题："设计微服务架构时的关键考虑因素有哪些，包括可扩展性、容错性和数据一致性模式？"
回答："在设计分布式系统时，水平扩展能力至关重要 - 团队应实施负载分配和自动扩展以应对高峰期需求。系统弹性通过故障检测机制、冗余实现和隔离边界来实现，防止级联故障。对于跨服务维护数据完整性，开发人员可以实施编排事务序列、仅追加事件日志和分离命令/查询责任模型。"
预期方面："可扩展性、容错性、数据一致性模式"
提供方面："水平扩展能力、负载分配、自动扩展、系统弹性、故障检测、冗余、隔离边界、数据完整性、编排事务序列、仅追加事件日志、命令/查询责任模型"
思考："问题明确提到微服务架构的三个方面：可扩展性、容错性和数据一致性模式。尽管使用了不同的术语，回答涵盖了所有三个方面：可扩展性（通过'水平扩展能力'、'负载分配'和'自动扩展'）、容错性（通过'系统弹性'、'故障检测'、'冗余'和'隔离边界'）以及数据一致性模式（讨论了'数据完整性'、'编排事务序列'、'仅追加事件日志'和'命令/查询责任模型'）。尽管术语不同，所有明确提及的方面都得到了覆盖。"
通过：是

问题："从用户界面、应用生态系统和安全性方面比较iOS和Android。"
回答："苹果的移动平台为用户提供了精心策划的视觉体验，强调极简设计和一致性，而谷歌的产品则注重灵活性和定制选项。App Store的审核流程创建了一个围墙花园，具有更高的质量控制但选择更少，而Play Store则提供更大的开发者自由度和多样性。苹果采用严格的沙盒技术并保持紧密的硬件-软件集成。"
预期方面："用户界面、应用生态系统、安全性"
提供方面："视觉体验、极简设计、灵活性、定制化、App Store审核流程、围墙花园、质量控制、Play Store、开发者自由度、沙盒、硬件-软件集成"
思考："问题明确要求比较iOS和Android在三个特定方面：用户界面、应用生态系统和安全性。回答涵盖了用户界面（讨论了'视觉体验'、'极简设计'、'灵活性'和'定制化'）和应用生态系统（提到了'App Store审核流程'、'围墙花园'、'质量控制'、'Play Store'和'开发者自由度'）。对于安全性，它提到了'沙盒'和'硬件-软件集成'，这些是iOS的安全功能，但没有提供Android安全方法的比较分析。由于安全性方面只针对一个平台部分涵盖，这一方面的比较不完整。"
通过：否

问题："解释社交媒体如何影响青少年的心理健康、学业表现和社交关系。"
回答："像Instagram和TikTok这样的平台与青少年的心理困扰有关，有记录表明比较性思维模式增加和对社交排斥的焦虑。随着屏幕时间增加，学业成绩往往受到影响，作业完成率下降，学习过程中注意力分散。同伴关系呈现复杂的二元性 - 数字平台促进与朋友网络的持续联系，同时有时减少面对面社交技能发展并促成新形式的同伴骚扰。"
预期方面："心理健康、学业表现、社交关系"
提供方面："心理困扰、比较性思维、社交排斥焦虑、学业成绩、屏幕时间、作业完成率、注意力分散、同伴关系、与朋友网络的持续联系、面对面社交技能发展、同伴骚扰"
思考："问题明确询问社交媒体对青少年的三个方面影响：心理健康、学业表现和社交关系。回答使用不同术语涵盖了所有三个方面：心理健康（讨论了'心理困扰'、'比较性思维'、'社交排斥焦虑'）、学业表现（提到了'学业成绩'、'屏幕时间'、'作业完成率'、'注意力分散'）和社交关系（涵盖了'同伴关系'、'与朋友网络的持续联系'、'面对面社交技能发展'和'同伴骚扰'）。尽管使用了不同的语言，所有明确提及的方面都得到了覆盖。"
通过：是

问题："哪些经济和政治因素导致了2008年金融危机？"
回答："多年高风险贷款实践后的房地产市场崩溃严重损害了抵押贷款支持证券的价值。华尔街创造了复杂的衍生品，掩盖了潜在的风险水平，而信用评估机构在监督角色中失败。1990年代金融行业的立法变化消除了先前限制投资银行过度杠杆和投机的监管护栏。"
预期方面："经济因素、政治因素"
提供方面："房地产市场崩溃、高风险贷款、抵押贷款支持证券、衍生品、风险掩盖、信用评估失败、立法变化、监管护栏消除、杠杆、投机"
思考："问题明确询问两类因素：经济和政治。回答涵盖了经济因素（'房地产市场崩溃'、'高风险贷款'、'抵押贷款支持证券'、'衍生品'、'风险掩盖'、'信用评估失败'）和政治因素（'立法变化'、'监管护栏消除'）。虽然使用了不同的术语，但回答涵盖了两个明确要求的方面。"
通过：是

问题："新冠病毒的传播对经济、教育系统和医疗基础设施有什么影响？"
回答："新冠病毒对全球经济造成了巨大打击，许多企业倒闭，失业率急剧上升。在教育方面，向远程学习的转变加剧了数字鸿沟，但也加速了新教育技术的采用。"
预期方面："经济、教育系统、医疗基础设施"
提供方面："全球经济、企业倒闭、失业率、远程学习、数字鸿沟、教育技术"
思考："问题明确询问新冠病毒影响的三个方面：经济、教育系统和医疗基础设施。回答涵盖了经济（'全球经济'、'企业倒闭'、'失业率'）和教育系统（'远程学习'、'数字鸿沟'、'教育技术'），但完全省略了对医疗基础设施影响的讨论，而这是问题中明确要求的。"
通过：否

问题："请解释人工智能在医疗诊断、自动驾驶和客户服务方面的应用。"
回答："在医疗领域，AI算法可以分析医学影像以检测癌症和其他疾病，准确率有时甚至超过人类专家。自动驾驶技术利用机器学习处理来自雷达、激光雷达和摄像头的数据，实时做出驾驶决策。在客户服务方面，聊天机器人和智能助手能够处理常见问题，分类客户查询，并在必要时将复杂问题转给人工代表。"
预期方面："医疗诊断、自动驾驶、客户服务"
提供方面："医学影像分析、癌症检测、雷达数据处理、激光雷达数据处理、摄像头数据处理、实时驾驶决策、聊天机器人、智能助手、客户查询分类"
思考："问题明确要求解释人工智能在三个领域的应用：医疗诊断、自动驾驶和客户服务。回答虽然使用了不同的术语，但涵盖了所有三个方面：医疗诊断（讨论了'医学影像分析'和'癌症检测'），自动驾驶（包括'雷达数据处理'、'激光雷达数据处理'、'摄像头数据处理'和'实时驾驶决策'），以及客户服务（提到了'聊天机器人'、'智能助手'和'客户查询分类'）。尽管使用了不同的表述，但所有明确提及的方面都得到了全面覆盖。"
通过：是

问题："气候变化如何影响沿海地区的农业生产、海洋生态系统和公共健康？"
回答："温度和降水的变化改变了作物生长周期和农业害虫分布，需要在耕作实践中进行调整。在海洋中，海水酸化和变暖导致珊瑚白化和海洋物种向更冷纬度迁移，扰乱了现有的食物链。"
预期方面："农业生产、海洋生态系统、公共健康"
提供方面："生长周期、害虫分布、耕作实践调整、海水酸化、海水变暖、珊瑚白化、海洋物种迁移、食物链扰乱"
思考："问题明确要求气候变化对三个方面的影响：农业生产、海洋生态系统和公共健康。回答涵盖了农业生产（讨论了'生长周期'、'害虫分布'和'耕作实践调整'）和海洋生态系统（涵盖了'海水酸化'、'海水变暖'、'珊瑚白化'、'海洋物种迁移'和'食物链扰乱'）。然而，它完全忽略了对沿海地区公共健康影响的讨论，而这是问题中明确要求的。"
通过：否
</示例>`,
    user: `
问题: ${question}
回答: ${answer}

请查看我的回答并思考。
`
  }
}

function getPluralityPrompt(question: string, answer: string): PromptPair {
  return {
    system: `您是一位评估专家，负责分析回答是否提供了问题中要求的适当数量的项目。

<规则>
问题类型参考表

| 问题类型 | 预期项目数 | 评估规则 |
|---------|-----------|---------|
| 明确数量 | 与指定数量完全匹配 | 提供与查询相关的确切数量的不同、非冗余项目。 |
| 数字范围 | 指定范围内的任何数字 | 确保数量在给定范围内，项目不同且非冗余。对于"至少N个"查询，满足最低阈值。 |
| 隐含多个 | ≥ 2 | 提供多个项目(通常为2-4个，除非上下文建议更多)，详细程度和重要性平衡。 |
| "几个" | 2-4 | 提供2-4个实质性项目，优先考虑质量而非数量。 |
| "几项" | 3-7 | 包括3-7个项目，提供全面但重点突出的覆盖，每个项目有简短解释。 |
| "许多" | 7+ | 呈现7个以上项目，展示广度，每个项目有简洁描述。 |
| "最重要的" | 按相关性排序的前3-5项 | 按重要性排序，解释排名标准，并按重要性排列项目。 |
| "前N个" | 恰好N个，排序 | 提供恰好N个按重要性/相关性排序的项目，有明确的排名标准。 |
| "优缺点" | 每类≥2个 | 呈现平衡的观点，每个类别至少有2个项目，涉及不同方面。 |
| "比较X和Y" | ≥3个比较点 | 解决至少3个不同的比较维度，平衡处理主要差异/相似之处。 |
| "步骤"或"过程" | 所有必要步骤 | 按逻辑顺序包括所有关键步骤，不缺少依赖关系。 |
| "例子" | ≥3个(除非另有说明) | 提供至少3个多样化、有代表性、具体的例子，除非指定了数量。 |
| "全面" | 10+ | 提供广泛覆盖(10个以上项目)，跨主要类别/子类别，展示领域专业知识。 |
| "简要"或"快速" | 1-3 | 呈现简洁内容(1-3个项目)，重点关注最重要的元素，高效描述。 |
| "完整" | 所有相关项目 | 在合理范围内提供详尽覆盖，无重大遗漏，必要时使用分类。 |
| "彻底" | 7-10 | 提供详细覆盖，解决主要主题和子主题，兼具广度和深度。 |
| "概述" | 3-5 | 覆盖主要概念/方面，平衡覆盖，专注于基本理解。 |
| "总结" | 3-5个要点 | 提炼基本信息，简洁而全面地捕捉主要要点。 |
| "主要"或"关键" | 3-7 | 专注于对理解至关重要的最重要元素，涵盖不同方面。 |
| "基本" | 3-7 | 仅包括关键、必要项目，不包括外围或可选元素。 |
| "基础" | 2-5 | 呈现面向初学者的基础概念，专注于核心原则。 |
| "详细" | 5-10个带详细说明 | 提供深入覆盖，包括列表之外的解释，包括具体信息和细微差别。 |
| "常见" | 4-8个最频繁 | 专注于典型或普遍项目，尽可能按频率排序，这些项目被广泛认可。 |
| "主要" | 2-5个最重要 | 专注于主导因素，解释其首要性和超大影响。 |
| "次要" | 3-7个支持项目 | 呈现重要但非关键的项目，补充主要因素并提供额外上下文。 |
| 未指定分析 | 3-5个要点 | 默认为3-5个主要点，涵盖主要方面，平衡广度和深度。 |
</规则>
`,
    user:
      `
问题: ${question}
回答: ${answer}

请查看我的回答并思考。
`
  }
}

function getContentRichnessPrompt(question: string, answer: string): PromptPair {
  return {
    system: `您是一位评估专家，负责分析回答的内容丰富度、段落结构和字数是否满足要求。

<规则>
内容丰富度评估标准

1. 字数要求：
   - 每个三级标题(###)下的内容应至少1000字
   - 整体回答应根据问题复杂度提供足够的内容长度
   - 如果问题明确要求特定字数，必须满足该要求

2. 段落结构：
   - 段落应组织合理，每段应有明确的主题和论点
   - 避免过度分点列举，每点只有1-2句话的情况
   - 段落长度应适中，通常5-8句话为宜
   - 相关内容应形成连贯的段落，而非零散的短句

3. 内容深度：
   - 应提供深入分析而非表面描述
   - 包含具体事实、数据、案例或论据支持观点
   - 多角度分析问题，考虑不同维度
   - 避免空洞、模糊或过于一般化的表述

4. 风格要求：
   - 避免过度使用AI风格的分点罗列
   - 使用自然、流畅的叙述风格
   - 适当使用过渡词增强段落间的连贯性
   - 保持专业、客观的语气

5. 评分标准：
   - 字数充足度(0-10分)：实际字数与要求的比例
   - 段落结构(0-10分)：段落组织是否自然连贯
   - 内容深度(0-10分)：分析是否深入、多维
   - 表达风格(0-10分)：是否避免AI式分点罗列
   - 总分低于28分视为不通过
</规则>

<示例>
问题："请分析人工智能对未来就业市场的影响"
回答："人工智能将影响就业市场。
1. 自动化替代：AI将替代重复性工作
2. 新职业创造：将创造新的工作岗位
3. 技能需求变化：需要更多技术技能
4. 行业转型：传统行业将被颠覆
5. 收入不平等：可能加剧贫富差距"
评估：{
  "think": "回答虽然涵盖了多个方面，但每点只有一句话，没有深入分析。整体字数不足200字，缺乏具体案例和数据支持。采用了典型的AI分点罗列风格，没有形成连贯段落。",
  "content_richness_analysis": {
    "word_count": 78,
    "word_count_score": 2,
    "paragraph_structure_score": 3,
    "content_depth_score": 4,
    "expression_style_score": 2,
    "total_score": 11
  },
  "pass": false
}

问题："请详细介绍罗马的历史与文化"
回答："罗马是世界上最古老、最具历史意义的城市之一，其历史可追溯至公元前753年。作为古罗马帝国的中心，这座城市见证了人类文明的重要发展阶段。罗马的建立与罗穆卢斯和雷穆斯兄弟的传说紧密相连，这一神话故事已成为西方文化的重要组成部分。

罗马的政治制度经历了从王政时期到共和国再到帝国的演变。共和国时期（公元前509年至公元前27年）建立了影响深远的政治体系，包括元老院、执政官制度以及公民大会等机构，这些政治创新至今仍影响着现代民主制度。奥古斯都建立帝国后，罗马进入了"罗马和平"时期，帝国疆域扩展至地中海周边大部分地区。

罗马文化融合了希腊、伊特鲁里亚等多种文明元素，但发展出独特的艺术、建筑和文学传统。罗马建筑以其宏伟规模和创新技术闻名，万神殿的圆顶设计展示了罗马人在建筑工程上的非凡才能。罗马法是其另一重要贡献，《民法大全》成为后世欧洲法律体系的基础。"
评估：{
  "think": "回答形成了连贯的段落，每段有明确主题，包含具体历史事实和文化内容。段落结构自然，避免了简单列举。但整体字数约300字，对于介绍罗马历史与文化这样宽泛的主题仍显不足，需要更多内容覆盖艺术、宗教、日常生活等方面。",
  "content_richness_analysis": {
    "word_count": 305,
    "word_count_score": 6,
    "paragraph_structure_score": 9,
    "content_depth_score": 7,
    "expression_style_score": 9,
    "total_score": 31
  },
  "pass": true
}
</示例>`,
    user: `
问题: ${question}
回答: ${answer}

请查看我的回答并思考。
`
  }
}

function getQuestionEvaluationPrompt(question: string): PromptPair {
  return {
    system: `您是一位评估专家，负责判断问题是否需要确定性、新鲜度、复数性、完整性和/或内容丰富度检查。

<评估类型>
确定性(definitive) - 检查问题是否需要确定性答案，或者是否可以接受不确定性（开放式、推测性、讨论式问题）
新鲜度(freshness) - 检查问题是否对时间敏感或需要非常近期的信息
复数性(plurality) - 检查问题是否要求多个项目、例子或特定数量的枚举
完整性(completeness) - 检查问题是否明确提及多个命名元素，这些元素都需要被涵盖
内容丰富度(content_richness) - 检查问题是否需要详细、深入的回答，具有大量字数和结构良好的段落
</评估类型>

<规则>
1. 确定性评估：
   - 几乎所有问题都需要 - 默认假设需要确定性评估
   - 只有在问题确实无法确定性评估的情况下才不需要
   - 无法确定性评估的问题示例：悖论、超出所有可能知识范围的问题
   - 即使看似主观的问题也可以基于证据进行确定性评估
   - 未来场景可以基于当前趋势和信息进行确定性评估
   - 寻找那些本质上无法通过任何可能方式回答的情况

2. 新鲜度评估：
   - 适用于关于当前状态、近期事件或时间敏感信息的问题
   - 适用于：价格、版本、领导职位、状态更新
   - 寻找术语："当前"、"最新"、"近期"、"现在"、"今天"、"新"
   - 将公司职位、产品版本、市场数据视为时间敏感

3. 复数性评估：
   - 仅在不触发完整性检查时应用
   - 适用于问题要求多个例子、项目或特定数量
   - 检查：数字（"5个例子"）、列表请求（"列出方法"）、枚举请求
   - 寻找："例子"、"列表"、"枚举"、"方法"、"方式"、"几个"
   - 关注项目或例子的数量要求

4. 完整性评估：
   - 优先于复数性检查 - 如果适用完整性，则将复数性设为false
   - 适用于问题明确提及多个命名元素，这些元素都需要被涵盖
   - 这包括：
     * 命名的方面或维度："经济、社会和环境因素"
     * 命名的实体："苹果、微软和谷歌"、"拜登和特朗普"
     * 命名的产品："iPhone 15和三星Galaxy S24"
     * 命名的地点："纽约、巴黎和东京"
     * 命名的时期："文艺复兴和工业革命"
   - 寻找由逗号、"和"、"或"、项目符号分隔的明确命名元素
   - 示例模式："比较X和Y"、"A、B和C之间的区别"、"P和Q两者"
   - 不要触发未明确命名的元素

5. 内容丰富度评估：
   - 适用于明确要求详细、深入或全面回答的问题
   - 适用于提及特定字数的情况："至少1000字"、"详细报告"
   - 寻找术语："详细"、"全面"、"深入"、"彻底"、"详尽"
   - 适用于本质上需要大量解释的复杂主题
   - 寻找暗示需要正式、详细回答的学术或专业上下文线索
   - 适用于要求分析、解释或讨论复杂主题的问题
</规则>

<示例>
<示例-1>
谁发明了微积分？牛顿和莱布尼兹各自的贡献是什么？
<思考>
这是关于微积分历史的问题，不涉及需要最新信息的内容。问题明确提到了牛顿和莱布尼兹两位数学家，要求分析他们各自的贡献，所以需要全面评估这两个特定的方面。这个问题涉及历史事实，有明确的学术研究可以参考，因此需要确定性评估。
</思考>
<输出>
"needsDefinitive": true,
"needsFreshness": false,
"needsPlurality": false,
"needsCompleteness": true,
</输出>
</示例-1>

<示例-2>
兄弟帮我计算一下这个4x4矩阵的特征值吧！！[矩阵详情] 明天就要考试了😭
<思考>
这是一个数学问题，关于特征值的计算，不随时间变化，因此不需要最新信息。4x4矩阵有多个特征值，所以需要识别多个不同的值。这是一个纯数学问题，有精确、可验证的解决方案，可以进行确定性评估。问题只要求计算特征值，不涉及多个不同主题的讨论。
</思考>
<输出>
"needsDefinitive": true,
"needsFreshness": false,
"needsPlurality": true,
"needsCompleteness": false,
</输出>
</示例-2>

<示例-3>
19世纪文学中浪漫主义和现实主义的主要区别是什么？
<思考>
这是一个关于文学史的问题，不需要最新信息。问题特别提到了两个流派：浪漫主义和现实主义。我需要评估这两个命名元素，因此完整性在这里很重要。这个问题涉及有文档记录的既定文学概念，可以进行确定性评估。问题没有要求超出两个指定流派的多个项目列表或枚举。
</思考>
<输出>
"needsDefinitive": true,
"needsFreshness": false,
"needsPlurality": false,
"needsCompleteness": true,
</输出>
</示例-3>

<示例-4>
列举莎士比亚最著名的5部悲剧，并简要说明其情节。
<思考>
这是关于莎士比亚悲剧的问题，不需要时事性信息。"列举5部"表明需要多个项目，因此需要复数性评估。"最著名的"这一标准可以基于学术共识和文化重要性进行确定性判断。问题不是要求分析特定作品，而是列举多部作品，这是主要要求。
</思考>
<输出>
"needsDefinitive": true,
"needsFreshness": false,
"needsPlurality": true,
"needsCompleteness": false,
</输出>
</示例-4>

<示例-5>
美国美国银行、富国银行和大通银行的当前抵押贷款利率是多少？
<思考>
这个问题询问"当前"利率，显然需要最新信息。问题特别提到了三家银行：美国银行、富国银行和大通银行。每个命名实体都必须被涵盖，因此需要完整性评估。这个问题寻求可客观验证的事实金融数据，需要确定性评估。问题没有要求超出指定银行的多种信息类型。
</思考>
<输出>
"needsDefinitive": true,
"needsFreshness": true,
"needsPlurality": false,
"needsCompleteness": true,
</输出>
</示例-5>

<示例-6>
2025年值得关注的3个人工智能趋势是什么？
<思考>
这是关于未来AI趋势的问题，需要最新信息。"3个"明确指定了数量，表明需要多个项目，因此需要复数性评估。虽然是关于未来的预测，但可以基于当前的AI发展趋势和研究进行确定性评估。问题没有提到需要覆盖的特定方面，重点是趋势的多样性，所以复数性比完整性更重要。
</思考>
<输出>
"needsDefinitive": true,
"needsFreshness": true,
"needsPlurality": true,
"needsCompleteness": false,
</输出>
</示例-6>

<示例-7>
当前经济环境下可持续投资的最佳策略有哪些？
<思考>
这个问题提到"当前经济环境"，因此需要最新信息。"策略"使用复数形式，表明需要多个例子。虽然"最佳"听起来可能是主观的，但可以基于收益数据、风险评估和可持续性标准进行确定性评估。问题没有提到需要全面覆盖的特定方面，重点是策略的多样性。
</思考>
<输出>
"needsDefinitive": true,
"needsFreshness": true,
"needsPlurality": true,
"needsCompleteness": false,
</输出>
</示例-7>

<示例-8>
请解释赤壁之战的历史背景、主要参与者以及战略意义，这对中国历史产生了什么影响？
<思考>
这是关于历史事件的问题，不需要最新信息。问题明确列出了多个需要评估的方面：历史背景、主要参与者、战略意义和历史影响。这些都是特定的历史课题，需要完整地覆盖。关于历史事件的问题有明确的史料记载和学术研究，可以进行确定性评估。
</思考>
<输出>
"needsDefinitive": true,
"needsFreshness": false,
"needsPlurality": false,
"needsCompleteness": true,
</输出>
</示例-8>

<示例-9>
人工智能在未来十年可能如何改变医疗行业？
<思考>
这个问题询问未来发展，需要关于AI和医疗的最新信息进行适当评估。问题使用"改变"（复数形式），表明应该识别多种变化。虽然涉及未来趋势，但可以基于当前研究、发展管道和行业分析进行确定性评估。问题没有提到必须全面覆盖的医疗特定方面，因此复数性比完整性更相关。
</思考>
<输出>
"needsDefinitive": true,
"needsFreshness": true,
"needsPlurality": true,
"needsCompleteness": false,
</输出>
</示例-9>

<示例-10>
您认为成人学习新语言的最佳方法是什么？
<思考>
这个关于语言学习的问题不需要时效性信息，因为基本的语言习得原则相对稳定。问题措辞暗示需要寻找构成有效方法的多个元素或方法，表明需要复数性。虽然问题使用主观语言（"您认为"），但可以基于语言学研究和已证实的方法论进行确定性评估。问题没有明确提到必须全面覆盖的特定语言学习方面。
</思考>
<输出>
"needsDefinitive": true,
"needsFreshness": false,
"needsPlurality": true,
"needsCompleteness": false,
</输出>
</示例-10>

<示例-11>
如果一棵树在森林中倒下，绝对没有观察者、仪器或任何可能的方式检测到它，它会发出声音吗？
<思考>
这是一个经典的哲学悖论，本质上无法以确定性方式回答。问题故意构建了一个排除所有可能验证手段的场景，使其在逻辑上无法评估。这类问题代表了真正无法确定性评估的罕见情况。问题不涉及近期事件，不要求多个项目，也没有指定必须涵盖的多个元素。
</思考>
<输出>
"needsDefinitive": false,
"needsFreshness": false,
"needsPlurality": false,
"needsCompleteness": false,
</输出>
</示例-11>

<示例-12>
请根据大纲编写一份项目可行性报告，每个小节不少于1000字。
<思考>
这个问题明确要求"每个小节不少于1000字"，这是一个明确的字数要求，需要进行内容丰富度评估。问题要求编写一份项目可行性报告，这是一个需要详细、全面分析的专业文档，需要确定性评估以确保内容准确。没有提到需要最新信息，也没有要求列举多个项目或明确提到需要覆盖的多个方面，因此不需要新鲜度、复数性和完整性评估。
</思考>
<输出>
"needsDefinitive": true,
"needsFreshness": false,
"needsPlurality": false,
"needsCompleteness": false,
"needsContentRichness": true
</输出>
</示例-12>

<示例-13>
详细分析当前中美贸易关系的现状、问题及未来发展趋势。
<思考>
这个问题要求"详细分析"，表明需要深入、全面的回答，因此需要内容丰富度评估。"当前"表明需要最新信息，因此需要新鲜度评估。问题明确提到三个方面：现状、问题及未来发展趋势，这些是需要全面覆盖的命名元素，因此需要完整性评估。作为一个基于事实的地缘政治分析，需要确定性评估以确保内容准确。
</思考>
<输出>
"needsDefinitive": true,
"needsFreshness": true,
"needsPlurality": false,
"needsCompleteness": true,
"needsContentRichness": true
</输出>
</示例-13>
</示例>

`,
    user:
      `
${question}
<think>`
  };
}

export async function evaluateQuestion(
  question: string,
  trackers: TrackerContext,
  schemaGen: Schemas
): Promise<EvaluationType[]> {
  try {
    const generator = new ObjectGeneratorSafe(trackers.tokenTracker);
    const prompt = getQuestionEvaluationPrompt(question);

    const result = await generator.generateObject({
      model: TOOL_NAME,
      schema: schemaGen.getQuestionEvaluateSchema(),
      system: prompt.system,
      prompt: prompt.user
    });

    // Always include definitive in types
    const types: EvaluationType[] = [];
    if (result.object.needsDefinitive) types.push('definitive');
    if (result.object.needsFreshness) types.push('freshness');
    if (result.object.needsPlurality) types.push('plurality');
    if (result.object.needsCompleteness) types.push('completeness');
    if (result.object.needsContentRichness) types.push('content_richness');

    logInfo(TOOL_NAME, { question, types });
    trackers?.actionTracker.trackThink(result.object.think);

    // Always evaluate definitive first, then freshness (if needed), then plurality (if needed)
    return types;

  } catch (error) {
    logError('Error in question evaluation:', { error });
    // Default to no check
    return [];
  }
}


async function performEvaluation<T>(
  evaluationType: EvaluationType,
  prompt: PromptPair,
  trackers: TrackerContext,
  schemaGen: Schemas
): Promise<GenerateObjectResult<T>> {
  const generator = new ObjectGeneratorSafe(trackers.tokenTracker);
  const result = await generator.generateObject({
    model: TOOL_NAME,
    schema: schemaGen.getEvaluatorSchema(evaluationType),
    system: prompt.system,
    prompt: prompt.user
  }) as GenerateObjectResult<any>;

  trackers.actionTracker.trackThink(result.object.think)

  logInfo(`${evaluationType} ${TOOL_NAME}`, result.object);

  return result;
}


// Main evaluation function
export async function evaluateAnswer(
  question: string,
  action: AnswerAction,
  evaluationTypes: EvaluationType[],
  trackers: TrackerContext,
  allKnowledge: KnowledgeItem[],
  schemaGen: Schemas
): Promise<EvaluationResponse> {
  let result;

  for (const evaluationType of evaluationTypes) {
    let prompt: { system: string; user: string } | undefined
    switch (evaluationType) {
      case 'definitive':
        prompt = getDefinitivePrompt(question, action.answer);
        break;
      case 'freshness':
        prompt = getFreshnessPrompt(question, action, new Date().toISOString());
        break;
      case 'plurality':
        prompt = getPluralityPrompt(question, action.answer);
        break;
      case 'completeness':
        prompt = getCompletenessPrompt(question, action.answer);
        break;
      case 'content_richness':
        prompt = getContentRichnessPrompt(question, action.answer);
        break;
      case 'strict':
        prompt = getRejectAllAnswersPrompt(question, action, allKnowledge);
        break;
      default:
        logError(`Unknown evaluation type: ${evaluationType}`);
    }
    if (prompt) {
      try {
        result = await performEvaluation(
          evaluationType,
          prompt,
          trackers,
          schemaGen
        );
      } catch (error) {
        logError(`Error performing ${evaluationType} evaluation`, { error });
        return { pass: false, think: `Error ${evaluationType} immedidately return false, probably due to bad prompt?`, type: evaluationType } as EvaluationResponse
      }

      // fail one, return immediately
      if (!(result?.object as EvaluationResponse)?.pass) {
        return result?.object as EvaluationResponse;
      }
    }
  }

  return result?.object as EvaluationResponse;
}
